# Build frontend
FROM node:18-alpine as frontend-build
WORKDIR /frontend
COPY frontend/package*.json ./
RUN npm install
COPY frontend/ .
RUN npm run build

# Build backend
FROM php:8.2-fpm
WORKDIR /var/www/html

# Install system dependencies
RUN apt-get update && apt-get install -y \
    nginx \
    git \
    curl \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    zip \
    unzip \
    default-mysql-client

# Install PHP extensions
RUN docker-php-ext-install pdo pdo_mysql mbstring exif pcntl bcmath gd

# Configure Nginx
COPY docker/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf

# Get Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Copy backend files
COPY backend/ .

# Copy built frontend files
COPY --from=frontend-build /frontend/dist/ ./public/

# Install dependencies
RUN composer install --optimize-autoloader --no-dev

# Environment setup
COPY backend/.env.example .env
RUN php artisan key:generate

# Set permissions
RUN chown -R www-data:www-data /var/www/html/storage

# Copy entrypoint script
COPY backend/docker-entrypoint.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint.sh

# Expose the port
EXPOSE $PORT

# Start script for Heroku
CMD ["/usr/local/bin/docker-entrypoint.sh"] 